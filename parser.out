Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    STRING_CONST
    VECTOR

Grammar

Rule 0     S' -> programm
Rule 1     programm -> decl function_opt main
Rule 2     function_opt -> empty
Rule 3     function_opt -> function function_opt
Rule 4     function -> FUN type_opt L_PAREN function_aux R_PAREN block
Rule 5     type_opt -> type
Rule 6     type_opt -> VOID
Rule 7     function_aux -> parameters
Rule 8     function_aux -> empty
Rule 9     main -> MAIN block
Rule 10    parameters -> type params_aux params_loop
Rule 11    params_aux -> ASAND ID
Rule 12    params_aux -> ID
Rule 13    params_aux -> a_variable
Rule 14    params_loop -> COMMA parameters
Rule 15    params_loop -> empty
Rule 16    decl -> decl_aux SEMICOLON
Rule 17    decl -> empty
Rule 18    decl_aux -> at_declaration decl_loop
Rule 19    decl_aux -> arr_declaration decl_loop
Rule 20    decl_loop -> COMMA decl_aux
Rule 21    decl_loop -> empty
Rule 22    type -> STRING
Rule 23    type -> INT
Rule 24    type -> FLOAT
Rule 25    type -> CHAR
Rule 26    type -> BOOL
Rule 27    at_declaration -> nuclear ID
Rule 28    arr_declaration -> nuclear ID dimensions
Rule 29    dimensions -> L_BRACKET POS_INT_CONST R_BRACKET dim_loop
Rule 30    dim_loop -> dimensions
Rule 31    dim_loop -> empty
Rule 32    block -> L_BRACE decl block_aux RETURN R_BRACE
Rule 33    block_aux -> empty
Rule 34    block_aux -> sentence
Rule 35    sentence -> assignment
Rule 36    sentence -> condition
Rule 37    sentence -> write
Rule 38    sentence -> read
Rule 39    sentence -> repeat
Rule 40    sentence -> while
Rule 41    repeat -> REPEAT L_PAREN POS_INT_CONST R_PAREN block
Rule 42    while -> WHILE L_PAREN expresion R_PAREN block
Rule 43    variable -> ID
Rule 44    variable -> arr_variable
Rule 45    arr_variable -> ID av_loop
Rule 46    av_loop -> L_BRACKET expresion R_BRACKET av_opt
Rule 47    av_opt -> empty
Rule 48    av_opt -> av_loop
Rule 49    assignment -> variable EQUALS expresion SEMICOLON
Rule 50    read -> READ L_PAREN ID R_PAREN SEMICOLON
Rule 51    write -> WRITE L_PAREN write_opt R_PAREN SEMICOLON
Rule 52    write_opt -> expresion
Rule 53    write_opt -> STRING
Rule 54    condition -> IF L_PAREN expresion R_PAREN block condition_aux SEMICOLON
Rule 55    condition_aux -> empty
Rule 56    condition_aux -> ELSE block
Rule 57    expresion -> level3 expresion_aux
Rule 58    expresion_aux -> OR expresion
Rule 59    expresion_aux -> AND expresion
Rule 60    expresion_aux -> empty
Rule 61    level3 -> level2 relational level2
Rule 62    level2 -> level1 level2_aux
Rule 63    level2_aux -> SUM level2
Rule 64    level2_aux -> MINUS level2
Rule 65    level2_aux -> empty
Rule 66    level1 -> level0 level1_aux
Rule 67    level1_aux -> empty
Rule 68    level1_aux -> MOD level1
Rule 69    level1_aux -> DIV level1
Rule 70    level1_aux -> MULT level1
Rule 71    level_0 -> L_PAREN expresion R_PAREN
Rule 72    level_0 -> constant
Rule 73    level_0 -> SUM constant
Rule 74    level_0 -> MINUS constant
Rule 75    logical -> L_EQUAL
Rule 76    logical -> G_EQUAL
Rule 77    logical -> LESS
Rule 78    logical -> GREATER
Rule 79    logical -> N_EQUAL
Rule 80    logical -> EQUALITY
Rule 81    constant -> variable
Rule 82    constant -> INT_CONST
Rule 83    constant -> FLOAT_CONST
Rule 84    constant -> TRUE
Rule 85    constant -> FALSE
Rule 86    empty -> <empty>

Terminals, with rules where they appear

AND                  : 59
ASAND                : 11
BOOL                 : 26
CHAR                 : 25
COMMA                : 14 20
DIV                  : 69
ELSE                 : 56
EQUALITY             : 80
EQUALS               : 49
FALSE                : 85
FLOAT                : 24
FLOAT_CONST          : 83
FUN                  : 4
GREATER              : 78
G_EQUAL              : 76
ID                   : 11 12 27 28 43 45 50
IF                   : 54
INT                  : 23
INT_CONST            : 82
LESS                 : 77
L_BRACE              : 32
L_BRACKET            : 29 46
L_EQUAL              : 75
L_PAREN              : 4 41 42 50 51 54 71
MAIN                 : 9
MINUS                : 64 74
MOD                  : 68
MULT                 : 70
N_EQUAL              : 79
OR                   : 58
POS_INT_CONST        : 29 41
READ                 : 50
REPEAT               : 41
RETURN               : 32
R_BRACE              : 32
R_BRACKET            : 29 46
R_PAREN              : 4 41 42 50 51 54 71
SEMICOLON            : 16 49 50 51 54
STRING               : 22 53
STRING_CONST         : 
SUM                  : 63 73
TRUE                 : 84
VECTOR               : 
VOID                 : 6
WHILE                : 42
WRITE                : 51
error                : 

Nonterminals, with rules where they appear

a_variable           : 13
arr_declaration      : 19
arr_variable         : 44
assignment           : 35
at_declaration       : 18
av_loop              : 45 48
av_opt               : 46
block                : 4 9 41 42 54 56
block_aux            : 32
condition            : 36
condition_aux        : 54
constant             : 72 73 74
decl                 : 1 32
decl_aux             : 16 20
decl_loop            : 18 19
dim_loop             : 29
dimensions           : 28 30
empty                : 2 8 15 17 21 31 33 47 55 60 65 67
expresion            : 42 46 49 52 54 58 59 71
expresion_aux        : 57
function             : 3
function_aux         : 4
function_opt         : 1 3
level0               : 66
level1               : 62 68 69 70
level1_aux           : 66
level2               : 61 61 63 64
level2_aux           : 62
level3               : 57
level_0              : 
logical              : 
main                 : 1
nuclear              : 27 28
parameters           : 7 14
params_aux           : 10
params_loop          : 10
programm             : 0
read                 : 38
relational           : 61
repeat               : 39
sentence             : 34
type                 : 5 10
type_opt             : 4
variable             : 49 81
while                : 40
write                : 37
write_opt            : 51

