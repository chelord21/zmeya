
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A9C8D1D4D6592257DA686991CB36E8E6'
    
_lr_action_items = {'INT':([0,10,11,12,13,15,17,20,21,23,33,34,35,85,88,89,90,165,166,],[3,3,3,-2,-28,-27,-41,-42,3,-3,3,3,3,-75,3,-85,3,-64,-16,]),'WRITE':([11,12,13,15,23,33,37,47,49,50,55,56,62,70,79,80,84,90,117,155,163,164,166,167,168,170,],[-90,-2,-28,-27,-3,-90,61,-25,-24,61,-26,-59,-58,-79,-80,-78,-81,-90,61,-86,-74,-90,-16,-18,-17,-19,]),'STRING_CONST':([83,],[113,]),'MULT':([36,43,44,45,51,66,72,73,74,91,93,94,95,98,99,100,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-45,-21,-20,136,-44,-23,-43,]),'MINUS':([36,43,44,45,51,66,72,73,74,91,93,94,95,98,99,100,101,132,135,156,157,158,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-45,-21,-20,-90,-44,-23,139,-47,-46,-49,-48,-50,-43,]),'FLOAT':([0,10,11,12,13,15,17,20,21,23,33,34,35,85,88,89,90,165,166,],[8,8,8,-2,-28,-27,-41,-42,8,-3,8,8,8,-75,8,-85,8,-64,-16,]),'IF':([11,12,13,15,23,33,37,47,49,50,55,56,62,70,79,80,84,90,117,155,163,164,166,167,168,170,],[-90,-2,-28,-27,-3,-90,54,-25,-24,54,-26,-59,-58,-79,-80,-78,-81,-90,54,-86,-74,-90,-16,-18,-17,-19,]),'DIV':([36,43,44,45,51,66,72,73,74,91,93,94,95,98,99,100,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-45,-21,-20,133,-44,-23,-43,]),'POS_INT_CONST':([25,76,],[31,106,]),'RETURN':([11,12,13,15,23,33,37,47,49,50,55,56,60,62,63,70,71,79,80,84,155,163,164,166,167,168,170,],[-90,-2,-28,-27,-3,-90,-90,-25,-24,-90,-26,-59,82,-58,-65,-79,-66,-80,-78,-81,-86,-74,-90,-16,-18,-17,-19,]),'R_PAREN':([34,35,36,38,39,41,42,43,44,45,66,67,72,73,74,75,86,87,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,113,114,115,116,121,126,128,129,132,135,137,138,141,142,143,144,152,153,154,156,157,158,159,160,161,162,],[-90,-90,-90,-77,65,-76,68,-29,-30,-31,-90,-90,-83,-82,-84,-90,-63,-61,-22,-90,-45,-21,-20,-90,131,-90,-44,-23,-90,-90,145,-37,146,147,148,-89,-88,150,-62,-56,-55,-32,-35,-47,-46,-54,-51,161,-90,-39,-38,-57,-34,-33,-49,-48,-50,-53,-52,-43,-40,]),'R_BRACKET':([31,],[36,]),'L_PAREN':([28,30,46,51,52,53,54,61,69,75,78,81,82,83,102,118,119,120,122,123,124,125,127,130,133,134,136,139,140,142,],[34,35,69,75,76,77,78,83,102,102,102,102,102,102,102,-71,102,-72,-73,-68,-70,-69,102,102,102,102,102,102,102,102,]),'SEMICOLON':([2,9,14,24,36,43,44,45,48,51,57,58,64,66,72,73,74,91,92,93,94,95,96,98,99,100,101,109,110,111,112,121,126,128,129,132,135,137,138,145,147,150,152,153,154,156,157,158,159,160,161,],[13,15,-10,-6,-90,-29,-30,-31,70,-90,79,80,84,-90,-83,-82,-84,-22,-90,-45,-21,-20,-90,-90,-44,-23,-90,-8,-7,-9,149,-56,-55,-32,-35,-47,-46,-54,-51,-36,-67,-87,-57,-34,-33,-49,-48,-50,-53,-52,-43,]),'TRUE':([69,75,78,81,82,83,102,118,119,120,122,123,124,125,127,130,133,134,136,139,140,142,],[91,91,91,91,91,91,91,-71,91,-72,-73,-68,-70,-69,91,91,91,91,91,91,91,91,]),'N_EQUAL':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,98,99,100,101,132,135,137,138,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,120,-45,-21,-20,-90,-44,-23,-90,-47,-46,-54,-51,-49,-48,-50,-53,-52,-43,]),'INT_CONST':([69,75,78,81,82,83,102,118,119,120,122,123,124,125,127,130,133,134,136,139,140,142,],[95,95,95,95,95,95,95,-71,95,-72,-73,-68,-70,-69,95,95,95,95,95,95,95,95,]),'ELSE':([164,166,],[169,-16,]),'EQUALITY':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,98,99,100,101,132,135,137,138,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,122,-45,-21,-20,-90,-44,-23,-90,-47,-46,-54,-51,-49,-48,-50,-53,-52,-43,]),'EQUALS':([36,43,44,45,51,59,72,73,74,],[-90,-29,-30,-31,-90,81,-83,-82,-84,]),'GREATER':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,98,99,100,101,132,135,137,138,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,118,-45,-21,-20,-90,-44,-23,-90,-47,-46,-54,-51,-49,-48,-50,-53,-52,-43,]),'L_BRACE':([27,65,68,131,146,148,169,],[33,33,90,90,90,90,90,]),'AND':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,96,98,99,100,101,121,126,132,135,137,138,152,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-90,-45,-21,-20,127,-90,-44,-23,-90,-56,-55,-47,-46,-54,-51,-57,-49,-48,-50,-53,-52,-43,]),'STRING':([0,10,11,12,13,15,17,20,21,23,33,34,35,85,88,89,90,165,166,],[5,5,5,-2,-28,-27,-41,-42,5,-3,5,5,5,-75,5,-85,5,-64,-16,]),'ID':([3,4,5,6,7,8,11,12,13,15,18,22,23,33,37,40,47,49,50,55,56,62,69,70,75,77,78,79,80,81,82,83,84,90,102,117,118,119,120,122,123,124,125,127,130,133,134,136,139,140,142,155,163,164,166,167,168,170,],[-12,-15,-11,14,-14,-13,-90,-2,-28,-27,28,30,-3,-90,51,66,-25,-24,51,-26,-59,-58,66,-79,66,66,66,-80,-78,51,66,66,-81,-90,66,51,-71,66,-72,-73,-68,-70,-69,66,66,66,66,66,66,66,66,-86,-74,-90,-16,-18,-17,-19,]),'READ':([11,12,13,15,23,33,37,47,49,50,55,56,62,70,79,80,84,90,117,155,163,164,166,167,168,170,],[-90,-2,-28,-27,-3,-90,53,-25,-24,53,-26,-59,-58,-79,-80,-78,-81,-90,53,-86,-74,-90,-16,-18,-17,-19,]),'FALSE':([69,75,78,81,82,83,102,118,119,120,122,123,124,125,127,130,133,134,136,139,140,142,],[100,100,100,100,100,100,100,-71,100,-72,-73,-68,-70,-69,100,100,100,100,100,100,100,100,]),'FLOAT_CONST':([69,75,78,81,82,83,102,118,119,120,122,123,124,125,127,130,133,134,136,139,140,142,],[94,94,94,94,94,94,94,-71,94,-72,-73,-68,-70,-69,94,94,94,94,94,94,94,94,]),'REPEAT':([11,12,13,15,23,33,37,47,49,50,55,56,62,70,79,80,84,90,117,155,163,164,166,167,168,170,],[-90,-2,-28,-27,-3,-90,52,-25,-24,52,-26,-59,-58,-79,-80,-78,-81,-90,52,-86,-74,-90,-16,-18,-17,-19,]),'WHILE':([11,12,13,15,23,33,37,47,49,50,55,56,62,70,79,80,84,90,117,155,163,164,166,167,168,170,],[-90,-2,-28,-27,-3,-90,46,-25,-24,46,-26,-59,-58,-79,-80,-78,-81,-90,46,-86,-74,-90,-16,-18,-17,-19,]),'G_EQUAL':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,98,99,100,101,132,135,137,138,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,125,-45,-21,-20,-90,-44,-23,-90,-47,-46,-54,-51,-49,-48,-50,-53,-52,-43,]),'MAIN':([0,10,11,12,13,15,16,17,19,20,21,23,29,85,89,165,166,],[-90,-90,-90,-2,-28,-27,27,-41,-4,-42,-90,-3,-5,-75,-85,-64,-16,]),'R_BRACE':([47,49,55,56,62,70,79,80,84,149,151,155,163,164,166,167,168,170,],[-25,-24,-26,-59,-58,-79,-80,-78,-81,165,166,-86,-74,-90,-16,-18,-17,-19,]),'OR':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,96,98,99,100,101,121,126,132,135,137,138,152,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-90,-45,-21,-20,130,-90,-44,-23,-90,-56,-55,-47,-46,-54,-51,-57,-49,-48,-50,-53,-52,-43,]),'SUM':([36,43,44,45,51,66,72,73,74,91,93,94,95,98,99,100,101,132,135,156,157,158,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-45,-21,-20,-90,-44,-23,140,-47,-46,-49,-48,-50,-43,]),'BOOL':([0,10,11,12,13,15,17,20,21,23,33,34,35,85,88,89,90,165,166,],[4,4,4,-2,-28,-27,-41,-42,4,-3,4,4,4,-75,4,-85,4,-64,-16,]),'MOD':([36,43,44,45,51,66,72,73,74,91,93,94,95,98,99,100,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,-45,-21,-20,134,-44,-23,-43,]),'COMMA':([36,43,44,45,66,67,72,73,74,91,92,93,94,95,96,98,99,100,101,103,121,126,128,129,132,135,137,138,152,153,154,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,88,-83,-82,-84,-22,-90,-45,-21,-20,-90,-90,-44,-23,-90,142,-56,-55,-32,-35,-47,-46,-54,-51,-57,-34,-33,-49,-48,-50,-53,-52,-43,]),'LESS':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,98,99,100,101,132,135,137,138,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,124,-45,-21,-20,-90,-44,-23,-90,-47,-46,-54,-51,-49,-48,-50,-53,-52,-43,]),'L_BRACKET':([14,36,51,66,],[25,25,25,25,]),'CHAR':([0,10,11,12,13,15,17,20,21,23,33,34,35,85,88,89,90,165,166,],[7,7,7,-2,-28,-27,-41,-42,7,-3,7,7,7,-75,7,-85,7,-64,-16,]),'$end':([1,26,32,165,],[0,-1,-60,-64,]),'VOID':([0,10,11,12,13,15,17,20,21,23,85,89,165,166,],[-90,22,-90,-2,-28,-27,-41,-42,22,-3,-75,-85,-64,-16,]),'L_EQUAL':([36,43,44,45,51,66,72,73,74,91,92,93,94,95,98,99,100,101,132,135,137,138,156,157,158,159,160,161,],[-90,-29,-30,-31,-90,-90,-83,-82,-84,-22,123,-45,-21,-20,-90,-44,-23,-90,-47,-46,-54,-51,-49,-48,-50,-53,-52,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'loops':([37,50,117,],[47,47,47,]),'write':([37,50,117,],[48,48,48,]),'level2':([69,75,78,81,82,83,102,119,127,130,139,140,142,],[92,92,92,92,92,92,92,92,92,92,159,160,92,]),'sentence':([37,50,117,],[49,49,49,]),'opt_array':([51,66,],[73,73,]),'content':([37,50,117,],[50,50,151,]),'function_kleen':([10,21,],[16,29,]),'level3':([69,75,78,81,82,83,102,119,127,130,142,],[96,96,96,96,96,96,96,152,96,96,96,]),'constant':([69,75,78,81,82,83,102,119,127,130,133,134,136,139,140,142,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'fun_call_opts':([75,142,],[104,162,]),'write_opt':([83,],[115,]),'assignment_opts':([81,],[110,]),'level3_loop':([92,],[126,]),'dim_loop':([36,],[43,]),'assignment':([37,50,117,],[58,58,58,]),'variable':([37,40,50,69,75,77,78,81,82,83,102,117,119,127,130,133,134,136,139,140,142,],[59,67,59,93,93,107,93,93,93,93,93,59,93,93,93,93,93,93,93,93,93,]),'at_declaration':([0,11,33,90,],[9,9,9,9,]),'block':([68,131,146,148,169,],[89,155,163,164,170,]),'atomic':([0,10,11,21,33,34,35,88,90,],[6,18,6,18,6,40,40,40,6,]),'funcall_params_loop':([103,],[144,]),'fun_call':([37,50,81,117,],[64,64,111,64,]),'params_loop':([67,],[87,]),'decl_kleen':([0,11,33,90,],[10,23,37,117,]),'relational':([92,],[119,]),'parameters':([34,35,88,],[38,38,116,]),'else_condition':([164,],[168,]),'arr_declaration':([0,11,33,90,],[2,2,2,2,]),'opt_params':([34,35,],[39,42,]),'rblock':([27,65,],[32,85,]),'expresion':([69,75,78,81,82,83,102,127,130,142,],[97,103,108,109,112,114,141,153,154,103,]),'condition':([37,50,117,],[55,55,55,]),'repeat':([37,50,117,],[56,56,56,]),'function':([10,21,],[21,21,]),'declaration':([0,11,33,90,],[11,11,11,11,]),'level0':([69,75,78,81,82,83,102,119,127,130,133,134,136,139,140,142,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'level1_loop':([98,],[135,]),'program':([0,],[1,]),'read':([37,50,117,],[57,57,57,]),'main':([16,],[26,]),'content_kleen':([37,50,],[60,71,]),'rfunction':([10,21,],[17,17,]),'vfunction':([10,21,],[20,20,]),'while':([37,50,117,],[62,62,62,]),'expresion_loop':([96,],[128,]),'empty':([0,10,11,21,33,34,35,36,37,50,51,66,67,75,90,92,96,98,101,103,142,164,],[12,19,12,19,12,41,41,45,63,63,72,72,86,105,12,121,129,132,137,143,105,167,]),'dimensions':([14,36,51,66,],[24,44,74,74,]),'level1':([69,75,78,81,82,83,102,119,127,130,133,134,136,139,140,142,],[101,101,101,101,101,101,101,101,101,101,156,157,158,101,101,101,]),'level2_loop':([101,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> decl_kleen function_kleen main','program',3,'p_program','parser.py',12),
  ('decl_kleen -> empty','decl_kleen',1,'p_decl_kleen','parser.py',16),
  ('decl_kleen -> declaration decl_kleen','decl_kleen',2,'p_decl_kleen','parser.py',17),
  ('function_kleen -> empty','function_kleen',1,'p_function_kleen','parser.py',21),
  ('function_kleen -> function function_kleen','function_kleen',2,'p_function_kleen','parser.py',22),
  ('arr_declaration -> atomic ID dimensions','arr_declaration',3,'p_arr_declaration','parser.py',26),
  ('assignment -> variable EQUALS assignment_opts','assignment',3,'p_assignment','parser.py',30),
  ('assignment_opts -> expresion','assignment_opts',1,'p_assignment_opts','parser.py',34),
  ('assignment_opts -> fun_call','assignment_opts',1,'p_assignment_opts','parser.py',35),
  ('at_declaration -> atomic ID','at_declaration',2,'p_at_declaration','parser.py',39),
  ('atomic -> STRING','atomic',1,'p_atomic','parser.py',43),
  ('atomic -> INT','atomic',1,'p_atomic','parser.py',44),
  ('atomic -> FLOAT','atomic',1,'p_atomic','parser.py',45),
  ('atomic -> CHAR','atomic',1,'p_atomic','parser.py',46),
  ('atomic -> BOOL','atomic',1,'p_atomic','parser.py',47),
  ('block -> L_BRACE decl_kleen content R_BRACE','block',4,'p_block','parser.py',51),
  ('condition -> IF L_PAREN expresion R_PAREN block else_condition','condition',6,'p_condition','parser.py',55),
  ('else_condition -> empty','else_condition',1,'p_else_condition','parser.py',59),
  ('else_condition -> ELSE block','else_condition',2,'p_else_condition','parser.py',60),
  ('constant -> INT_CONST','constant',1,'p_constant','parser.py',64),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','parser.py',65),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',66),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',67),
  ('content -> sentence','content',1,'p_content','parser.py',71),
  ('content -> loops','content',1,'p_content','parser.py',72),
  ('content -> condition','content',1,'p_content','parser.py',73),
  ('declaration -> at_declaration SEMICOLON','declaration',2,'p_declaration','parser.py',77),
  ('declaration -> arr_declaration SEMICOLON','declaration',2,'p_declaration','parser.py',78),
  ('dimensions -> L_BRACKET POS_INT_CONST R_BRACKET dim_loop','dimensions',4,'p_dimensions','parser.py',82),
  ('dim_loop -> dimensions','dim_loop',1,'p_dim_loop','parser.py',86),
  ('dim_loop -> empty','dim_loop',1,'p_dim_loop','parser.py',87),
  ('expresion -> level3 expresion_loop','expresion',2,'p_expresion','parser.py',91),
  ('expresion_loop -> OR expresion','expresion_loop',2,'p_expresion_loop','parser.py',95),
  ('expresion_loop -> AND expresion','expresion_loop',2,'p_expresion_loop','parser.py',96),
  ('expresion_loop -> empty','expresion_loop',1,'p_expresion_loop','parser.py',97),
  ('fun_call -> ID L_PAREN fun_call_opts R_PAREN','fun_call',4,'p_fun_call','parser.py',101),
  ('fun_call_opts -> empty','fun_call_opts',1,'p_fun_call_opts','parser.py',105),
  ('fun_call_opts -> expresion funcall_params_loop','fun_call_opts',2,'p_fun_call_opts','parser.py',106),
  ('funcall_params_loop -> empty','funcall_params_loop',1,'p_funcall_params_loop','parser.py',114),
  ('funcall_params_loop -> COMMA fun_call_opts','funcall_params_loop',2,'p_funcall_params_loop','parser.py',115),
  ('function -> rfunction','function',1,'p_function','parser.py',119),
  ('function -> vfunction','function',1,'p_function','parser.py',120),
  ('level0 -> L_PAREN expresion R_PAREN','level0',3,'p_level0','parser.py',124),
  ('level0 -> constant','level0',1,'p_level0','parser.py',125),
  ('level0 -> variable','level0',1,'p_level0','parser.py',126),
  ('level1 -> level0 level1_loop','level1',2,'p_level1','parser.py',130),
  ('level1_loop -> empty','level1_loop',1,'p_level1_loop','parser.py',134),
  ('level1_loop -> MOD level1','level1_loop',2,'p_level1_loop','parser.py',135),
  ('level1_loop -> DIV level1','level1_loop',2,'p_level1_loop','parser.py',136),
  ('level1_loop -> MULT level1','level1_loop',2,'p_level1_loop','parser.py',137),
  ('level2 -> level1 level2_loop','level2',2,'p_level2','parser.py',141),
  ('level2_loop -> SUM level2','level2_loop',2,'p_level2_loop','parser.py',145),
  ('level2_loop -> MINUS level2','level2_loop',2,'p_level2_loop','parser.py',146),
  ('level2_loop -> empty','level2_loop',1,'p_level2_loop','parser.py',147),
  ('level3 -> level2 level3_loop','level3',2,'p_level3','parser.py',151),
  ('level3_loop -> empty','level3_loop',1,'p_level3_loop','parser.py',155),
  ('level3_loop -> relational level3','level3_loop',2,'p_level3_loop','parser.py',156),
  ('loops -> while','loops',1,'p_loops','parser.py',160),
  ('loops -> repeat','loops',1,'p_loops','parser.py',161),
  ('main -> MAIN rblock','main',2,'p_main','parser.py',165),
  ('parameters -> atomic variable params_loop','parameters',3,'p_parameters','parser.py',169),
  ('params_loop -> COMMA parameters','params_loop',2,'p_params_loop','parser.py',173),
  ('params_loop -> empty','params_loop',1,'p_params_loop','parser.py',174),
  ('rblock -> L_BRACE decl_kleen content_kleen RETURN expresion SEMICOLON R_BRACE','rblock',7,'p_rblock','parser.py',178),
  ('content_kleen -> empty','content_kleen',1,'p_content_kleen','parser.py',182),
  ('content_kleen -> content content_kleen','content_kleen',2,'p_content_kleen','parser.py',183),
  ('read -> READ L_PAREN variable R_PAREN','read',4,'p_read','parser.py',187),
  ('relational -> L_EQUAL','relational',1,'p_relational','parser.py',191),
  ('relational -> G_EQUAL','relational',1,'p_relational','parser.py',192),
  ('relational -> LESS','relational',1,'p_relational','parser.py',193),
  ('relational -> GREATER','relational',1,'p_relational','parser.py',194),
  ('relational -> N_EQUAL','relational',1,'p_relational','parser.py',195),
  ('relational -> EQUALITY','relational',1,'p_relational','parser.py',196),
  ('repeat -> REPEAT L_PAREN POS_INT_CONST R_PAREN block','repeat',5,'p_repeat','parser.py',200),
  ('rfunction -> atomic ID L_PAREN opt_params R_PAREN rblock','rfunction',6,'p_rfunction','parser.py',204),
  ('opt_params -> empty','opt_params',1,'p_opt_params','parser.py',208),
  ('opt_params -> parameters','opt_params',1,'p_opt_params','parser.py',209),
  ('sentence -> assignment SEMICOLON','sentence',2,'p_sentence','parser.py',213),
  ('sentence -> write SEMICOLON','sentence',2,'p_sentence','parser.py',214),
  ('sentence -> read SEMICOLON','sentence',2,'p_sentence','parser.py',215),
  ('sentence -> fun_call SEMICOLON','sentence',2,'p_sentence','parser.py',216),
  ('variable -> ID opt_array','variable',2,'p_variable','parser.py',220),
  ('opt_array -> empty','opt_array',1,'p_opt_array','parser.py',224),
  ('opt_array -> dimensions','opt_array',1,'p_opt_array','parser.py',225),
  ('vfunction -> VOID ID L_PAREN opt_params R_PAREN block','vfunction',6,'p_vfunction','parser.py',229),
  ('while -> WHILE L_PAREN expresion R_PAREN block','while',5,'p_while','parser.py',233),
  ('write -> WRITE L_PAREN write_opt R_PAREN','write',4,'p_write','parser.py',237),
  ('write_opt -> expresion','write_opt',1,'p_write_opt','parser.py',241),
  ('write_opt -> STRING_CONST','write_opt',1,'p_write_opt','parser.py',242),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',246),
]
